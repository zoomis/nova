####################
# nova.conf sample #
####################

[DEFAULT]

######## defined in nova.openstack.common.cfg:CommonConfigOpts ########

# debug=false
#### (BoolOpt) Print debugging output

# verbose=false
#### (BoolOpt) Print more verbose output

# log_config=<None>
#### (StrOpt) If this option is specified, the logging configuration file
####          specified is used and overrides any other logging options
####          specified. Please see the Python logging module
####          documentation for details on logging configuration files.

# log_format=%(asctime)s %(levelname)8s [%(name)s] %(message)s
#### (StrOpt) A logging.Formatter log message format string which may use
####          any of the available logging.LogRecord attributes. Default:
####          %default

# log_date_format=%Y-%m-%d %H:%M:%S
#### (StrOpt) Format string for %(asctime)s in log records. Default:
####          %default

# log_file=<None>
#### (StrOpt) (Optional) Name of log file to output to. If not set,
####          logging will go to stdout.

# log_dir=<None>
#### (StrOpt) (Optional) The directory to keep log files in (will be
####          prepended to --logfile)

# use_syslog=false
#### (BoolOpt) Use syslog for logging.

# syslog_log_facility=LOG_USER
#### (StrOpt) syslog facility to receive log lines


######## defined in nova.crypto ########

# ca_file=cacert.pem
#### (StrOpt) Filename of root CA

# key_file=private/cakey.pem
#### (StrOpt) Filename of private key

# crl_file=crl.pem
#### (StrOpt) Filename of root Certificate Revocation List

# keys_path=$state_path/keys
#### (StrOpt) Where we keep our keys

# ca_path=$state_path/CA
#### (StrOpt) Where we keep our root CA

# use_project_ca=false
#### (BoolOpt) Should we use a CA for each project?

# user_cert_subject=/C=US/ST=California/O=OpenStack/OU=NovaDev/CN=%.16s-%.16s-%s
#### (StrOpt) Subject for certificate for users, %s for project, user,
####          timestamp

# project_cert_subject=/C=US/ST=California/O=OpenStack/OU=NovaDev/CN=project-ca-%.16s-%s
#### (StrOpt) Subject for certificate for projects, %s for project,
####          timestamp


######## defined in nova.flags ########

# connection_type=<None>
#### (StrOpt) Deprecated (use compute_driver instead): Virtualization api
####          connection type : libvirt, xenapi, or fake

# sql_connection=sqlite:///$state_path/$sqlite_db
#### (StrOpt) The SQLAlchemy connection string used to connect to the
####          database

# api_paste_config=api-paste.ini
#### (StrOpt) File name for the paste.deploy config for nova-api

# pybasedir=/usr/lib/python/site-packages
#### (StrOpt) Directory where the nova python module is installed

# bindir=$pybasedir/bin
#### (StrOpt) Directory where nova binaries are installed

# state_path=$pybasedir
#### (StrOpt) Top-level directory for maintaining nova's state

# lock_path=$pybasedir
#### (StrOpt) Directory to use for lock files

# fake_network=false
#### (BoolOpt) If passed, use fake network devices and addresses

# sql_connection_debug=0
#### (IntOpt) Verbosity of SQL debugging information. 0=None,
####          100=Everything

# sql_connection_trace=false
#### (BoolOpt) Add python stack traces to SQL as comment strings

# my_ip=10.0.0.1
#### (StrOpt) ip address of this host

# region_list=
#### (ListOpt) list of region=fqdn pairs separated by commas

# aws_access_key_id=admin
#### (StrOpt) AWS Access ID

# aws_secret_access_key=admin
#### (StrOpt) AWS Access Key

# glance_host=$my_ip
#### (StrOpt) default glance hostname or ip

# glance_port=9292
#### (IntOpt) default glance port

# glance_api_servers=$glance_host:$glance_port
#### (ListOpt) A list of the glance api servers available to nova. Prefix
####           with https:// for ssl-based glance api servers.
####           ([hostname|ip]:port)

# glance_api_insecure=false
#### (BoolOpt) Allow to perform insecure SSL (https) requests to glance

# glance_num_retries=0
#### (IntOpt) Number retries when downloading an image from glance

# s3_port=3333
#### (IntOpt) port used when accessing the s3 api

# s3_host=$my_ip
#### (StrOpt) hostname or ip for openstack to use when accessing the s3
####          api

# cert_topic=cert
#### (StrOpt) the topic cert nodes listen on

# compute_topic=compute
#### (StrOpt) the topic compute nodes listen on

# console_topic=console
#### (StrOpt) the topic console proxy nodes listen on

# scheduler_topic=scheduler
#### (StrOpt) the topic scheduler nodes listen on

# volume_topic=volume
#### (StrOpt) the topic volume nodes listen on

# network_topic=network
#### (StrOpt) the topic network nodes listen on

# api_rate_limit=true
#### (BoolOpt) whether to rate limit the api

# enabled_apis=ec2,osapi_compute,osapi_volume,metadata
#### (ListOpt) a list of APIs to enable by default

# ec2_host=$my_ip
#### (StrOpt) the ip of the ec2 api server

# ec2_dmz_host=$my_ip
#### (StrOpt) the internal ip of the ec2 api server

# ec2_port=8773
#### (IntOpt) the port of the ec2 api server

# ec2_scheme=http
#### (StrOpt) the protocol to use when connecting to the ec2 api server
####          (http, https)

# ec2_path=/services/Cloud
#### (StrOpt) the path prefix used to call the ec2 api server

# osapi_compute_ext_list=
#### (ListOpt) Specify list of extensions to load when using
####           osapi_compute_extension option with
####           nova.api.openstack.compute.contrib.select_extensions

# osapi_compute_extension=nova.api.openstack.compute.contrib.standard_extensions
#### (MultiStrOpt) osapi compute extension to load

# osapi_volume_ext_list=
#### (ListOpt) Specify list of extensions to load when using
####           osapi_volume_extension option with
####           nova.api.openstack.volume.contrib.select_extensions

# osapi_volume_extension=nova.api.openstack.volume.contrib.standard_extensions
#### (MultiStrOpt) osapi volume extension to load

# osapi_path=/v1.1/
#### (StrOpt) the path prefix used to call the openstack api server

# osapi_compute_link_prefix=<None>
#### (StrOpt) Base URL that will be presented to users in links to the
####          OpenStack Compute API

# osapi_glance_link_prefix=<None>
#### (StrOpt) Base URL that will be presented to users in links to glance
####          resources

# osapi_max_limit=1000
#### (IntOpt) the maximum number of items returned in a single response
####          from a collection resource

# metadata_host=$my_ip
#### (StrOpt) the ip for the metadata api server

# metadata_port=8775
#### (IntOpt) the port for the metadata api port

# default_image=ami-11111
#### (StrOpt) default image to use, testing only

# default_instance_type=m1.small
#### (StrOpt) default instance type to use, testing only

# null_kernel=nokernel
#### (StrOpt) kernel image that indicates not to use a kernel, but to use
####          a raw disk image instead

# vpn_image_id=0
#### (StrOpt) image id used when starting up a cloudpipe vpn server

# vpn_key_suffix=-vpn
#### (StrOpt) Suffix to add to project name for vpn key and secgroups

# sqlite_db=nova.sqlite
#### (StrOpt) the filename to use with sqlite

# sqlite_synchronous=true
#### (BoolOpt) If passed, use synchronous mode for sqlite

# sql_idle_timeout=3600
#### (IntOpt) timeout before idle sql connections are reaped

# sql_max_retries=10
#### (IntOpt) maximum db connection retries during startup. (setting -1
####          implies an infinite retry count)

# sql_retry_interval=10
#### (IntOpt) interval between retries of opening a sql connection

# compute_manager=nova.compute.manager.ComputeManager
#### (StrOpt) full class name for the Manager for compute

# console_manager=nova.console.manager.ConsoleProxyManager
#### (StrOpt) full class name for the Manager for console proxy

# cert_manager=nova.cert.manager.CertManager
#### (StrOpt) full class name for the Manager for cert

# instance_dns_manager=nova.network.dns_driver.DNSDriver
#### (StrOpt) full class name for the DNS Manager for instance IPs

# instance_dns_domain=
#### (StrOpt) full class name for the DNS Zone for instance IPs

# floating_ip_dns_manager=nova.network.dns_driver.DNSDriver
#### (StrOpt) full class name for the DNS Manager for floating IPs

# network_manager=nova.network.manager.VlanManager
#### (StrOpt) full class name for the Manager for network

# volume_manager=nova.volume.manager.VolumeManager
#### (StrOpt) full class name for the Manager for volume

# scheduler_manager=nova.scheduler.manager.SchedulerManager
#### (StrOpt) full class name for the Manager for scheduler

# host=nova
#### (StrOpt) Name of this node.  This can be an opaque identifier.  It is
####          not necessarily a hostname, FQDN, or IP address. However,
####          the node name must be valid within an AMQP key, and if using
####          ZeroMQ, a valid hostname, FQDN, or IP address

# node_availability_zone=nova
#### (StrOpt) availability zone of this node

# memcached_servers=<None>
#### (ListOpt) Memcached servers or None for in process cache.

# instance_usage_audit_period=month
#### (StrOpt) time period to generate instance usages for.  Time period
####          must be hour, day, month or year

# bandwidth_poll_interval=600
#### (IntOpt) interval to pull bandwidth usage info

# start_guests_on_host_boot=false
#### (BoolOpt) Whether to restart guests when the host reboots

# resume_guests_state_on_host_boot=false
#### (BoolOpt) Whether to start guests that were running before the host
####           rebooted

# default_ephemeral_format=<None>
#### (StrOpt) The default format an ephemeral_volume will be formatted
####          with on creation.

# root_helper=sudo
#### (StrOpt) Deprecated: command to use for running commands as root

# rootwrap_config=<None>
#### (StrOpt) Path to the rootwrap configuration file to use for running
####          commands as root

# network_driver=nova.network.linux_net
#### (StrOpt) Driver to use for network creation

# use_ipv6=false
#### (BoolOpt) use ipv6

# enable_instance_password=true
#### (BoolOpt) Allows use of instance password during server creation

# password_length=12
#### (IntOpt) Length of generated instance admin passwords

# monkey_patch=false
#### (BoolOpt) Whether to log monkey patching

# monkey_patch_modules=nova.api.ec2.cloud:nova.notifier.api.notify_decorator,nova.compute.api:nova.notifier.api.notify_decorator
#### (ListOpt) List of modules/decorators to monkey patch

# allow_resize_to_same_host=false
#### (BoolOpt) Allow destination machine to match source for resize. Useful
####           when testing in single-host environments.

# reclaim_instance_interval=0
#### (IntOpt) Interval in seconds for reclaiming deleted instances

# zombie_instance_updated_at_window=172800
#### (IntOpt) Number of seconds zombie instances are cleaned up.

# service_down_time=60
#### (IntOpt) maximum time since last check-in for up service

# default_schedule_zone=<None>
#### (StrOpt) availability zone to use when user doesn't specify one

# isolated_images=
#### (ListOpt) Images to run on isolated host

# isolated_hosts=
#### (ListOpt) Host reserved for specific images

# cache_images=all
#### (StrOpt) Cache glance images locally. `all` will cache all images,
####          `some` will only cache images that have the image_property
####          `cache_in_nova=True`, and `none` turns off caching entirely

# use_cow_images=true
#### (BoolOpt) Whether to use cow images

# compute_api_class=nova.compute.api.API
#### (StrOpt) The full class name of the compute API class to use

# network_api_class=nova.network.api.API
#### (StrOpt) The full class name of the network API class to use

# volume_api_class=nova.volume.api.API
#### (StrOpt) The full class name of the volume API class to use

# security_group_handler=nova.network.sg.NullSecurityGroupHandler
#### (StrOpt) The full class name of the security group handler class

# default_access_ip_network_name=<None>
#### (StrOpt) Name of network to use to set access ips for instances

# auth_strategy=noauth
#### (StrOpt) The strategy to use for auth: noauth or keystone.

# non_inheritable_image_properties=cache_in_nova,instance_uuid,user_id,image_type,backup_type,min_ram,min_disk
#### (ListOpt) These are image properties which a snapshot should not
####           inherit from an instance

# defer_iptables_apply=false
#### (BoolOpt) Whether to batch up the application of IPTables rules during
####           a host restart and apply all at the end of the init phase


######## defined in nova.notifications ########

# notify_on_any_change=false
#### (BoolOpt) If set, send compute.instance.update notifications on
####           instance state changes.  Valid values are False for no
####           notifications, True for notifications on any instance
####           changes.

# notify_on_state_change=<None>
#### (StrOpt) If set, send compute.instance.update notifications on
####          instance state changes.  Valid values are None for no
####          notifications, "vm_state" for notifications on VM state
####          changes, or "vm_and_task_state" for notifications on VM and
####          task state changes.


######## defined in nova.policy ########

# policy_file=policy.json
#### (StrOpt) JSON file representing policy

# policy_default_rule=default
#### (StrOpt) Rule checked when requested rule is not found


######## defined in nova.quota ########

# quota_instances=10
#### (IntOpt) number of instances allowed per project

# quota_cores=20
#### (IntOpt) number of instance cores allowed per project

# quota_ram=51200
#### (IntOpt) megabytes of instance ram allowed per project

# quota_volumes=10
#### (IntOpt) number of volumes allowed per project

# quota_gigabytes=1000
#### (IntOpt) number of volume gigabytes allowed per project

# quota_floating_ips=10
#### (IntOpt) number of floating ips allowed per project

# quota_metadata_items=128
#### (IntOpt) number of metadata items allowed per instance

# quota_injected_files=5
#### (IntOpt) number of injected files allowed

# quota_injected_file_content_bytes=10240
#### (IntOpt) number of bytes allowed per injected file

# quota_injected_file_path_bytes=255
#### (IntOpt) number of bytes allowed per injected file path

# quota_security_groups=10
#### (IntOpt) number of security groups per project

# quota_security_group_rules=20
#### (IntOpt) number of security rules per security group

# quota_key_pairs=100
#### (IntOpt) number of key pairs per user

# reservation_expire=86400
#### (IntOpt) number of seconds until a reservation expires

# until_refresh=0
#### (IntOpt) count of reservations until usage is refreshed

# max_age=0
#### (IntOpt) number of seconds between subsequent usage refreshes

# quota_driver=nova.quota.DbQuotaDriver
#### (StrOpt) default driver to use for quota checks


######## defined in nova.service ########

# report_interval=10
#### (IntOpt) seconds between nodes reporting state to datastore

# periodic_interval=60
#### (IntOpt) seconds between running periodic tasks

# periodic_fuzzy_delay=60
#### (IntOpt) range of seconds to randomly delay when starting the
####          periodic task scheduler to reduce stampeding. (Disable by
####          setting to 0)

# ec2_listen=0.0.0.0
#### (StrOpt) IP address for EC2 API to listen

# ec2_listen_port=8773
#### (IntOpt) port for ec2 api to listen

# ec2_workers=<None>
#### (IntOpt) Number of workers for EC2 API service

# osapi_compute_listen=0.0.0.0
#### (StrOpt) IP address for OpenStack API to listen

# osapi_compute_listen_port=8774
#### (IntOpt) list port for osapi compute

# osapi_compute_workers=<None>
#### (IntOpt) Number of workers for OpenStack API service

# metadata_manager=nova.api.manager.MetadataManager
#### (StrOpt) OpenStack metadata service manager

# metadata_listen=0.0.0.0
#### (StrOpt) IP address for metadata api to listen

# metadata_listen_port=8775
#### (IntOpt) port for metadata api to listen

# metadata_workers=<None>
#### (IntOpt) Number of workers for metadata service

# osapi_volume_listen=0.0.0.0
#### (StrOpt) IP address for OpenStack Volume API to listen

# osapi_volume_listen_port=8776
#### (IntOpt) port for os volume api to listen

# osapi_volume_workers=<None>
#### (IntOpt) Number of workers for OpenStack Volume API service


######## defined in nova.test ########

# sqlite_clean_db=clean.sqlite
#### (StrOpt) File name of clean sqlite db

# fake_tests=true
#### (BoolOpt) should we use everything for testing


######## defined in nova.api.auth ########

# use_forwarded_for=false
#### (BoolOpt) Treat X-Forwarded-For as the canonical remote address. Only
####           enable this if you have a sanitizing proxy.


######## defined in nova.api.ec2 ########

# lockout_attempts=5
#### (IntOpt) Number of failed auths before lockout.

# lockout_minutes=15
#### (IntOpt) Number of minutes to lockout if triggered.

# lockout_window=15
#### (IntOpt) Number of minutes for lockout window.

# keystone_ec2_url=http://localhost:5000/v2.0/ec2tokens
#### (StrOpt) URL to get token from ec2 request.

# ec2_private_dns_show_ip=false
#### (BoolOpt) Return the IP address as private dns hostname in describe
####           instances

# ec2_strict_validation=true
#### (BoolOpt) Validate security group names according to EC2 specification


######## defined in nova.api.metadata.base ########

# config_drive_skip_versions=1.0 2007-01-19 2007-03-01 2007-08-29 2007-10-10 2007-12-15 2008-02-01 2008-09-01
#### (StrOpt) List of metadata versions to skip placing into the config
####          drive


######## defined in nova.api.openstack.compute ########

# allow_instance_snapshots=true
#### (BoolOpt) Permit instance snapshot operations.


######## defined in nova.api.sizelimit ########

# osapi_max_request_body_size=114688
#### (IntOpt) the maximum body size per each osapi request(bytes)


######## defined in nova.cloudpipe.pipelib ########

# vpn_instance_type=m1.tiny
#### (StrOpt) Instance type for vpn instances

# boot_script_template=$pybasedir/nova/cloudpipe/bootscript.template
#### (StrOpt) Template for cloudpipe instance boot script

# dmz_net=10.0.0.0
#### (StrOpt) Network to push into openvpn config

# dmz_mask=255.255.255.0
#### (StrOpt) Netmask to push into openvpn config


######## defined in nova.common.deprecated ########

# fatal_deprecations=false
#### (BoolOpt) make deprecations fatal


######## defined in nova.common.eventlet_backdoor ########

# backdoor_port=<None>
#### (IntOpt) port for eventlet backdoor to listen


######## defined in nova.compute.manager ########

# instances_path=$state_path/instances
#### (StrOpt) where instances are stored on disk

# base_dir_name=_base
#### (StrOpt) Where cached images are stored under $instances_path.This is
####          NOT the full path - just a folder name.For per-compute-host
####          cached images, set to _base_$my_ip

# compute_driver=nova.virt.connection.get_connection
#### (StrOpt) Driver to use for controlling virtualization. Options
####          include: libvirt.LibvirtDriver, xenapi.XenAPIDriver,
####          fake.FakeDriver, baremetal.BareMetalDriver,
####          vmwareapi.VMWareESXDriver

# console_host=nova
#### (StrOpt) Console proxy host to use to connect to instances on this
####          host.

# live_migration_retry_count=30
#### (IntOpt) Number of 1 second retries needed in live_migration

# reboot_timeout=0
#### (IntOpt) Automatically hard reboot an instance if it has been stuck
####          in a rebooting state longer than N seconds. Set to 0 to
####          disable.

# instance_build_timeout=0
#### (IntOpt) Amount of time in seconds an instance can be in BUILD before
####          going into ERROR status.Set to 0 to disable.

# rescue_timeout=0
#### (IntOpt) Automatically unrescue an instance after N seconds. Set to 0
####          to disable.

# resize_confirm_window=0
#### (IntOpt) Automatically confirm resizes after N seconds. Set to 0 to
####          disable.

# host_state_interval=120
#### (IntOpt) Interval in seconds for querying the host status

# running_deleted_instance_timeout=0
#### (IntOpt) Number of seconds after being deleted when a running
####          instance should be considered eligible for cleanup.

# running_deleted_instance_poll_interval=30
#### (IntOpt) Number of periodic scheduler ticks to wait between runs of
####          the cleanup task.

# running_deleted_instance_action=log
#### (StrOpt) Action to take if a running deleted instance is
####          detected.Valid options are 'noop', 'log' and 'reap'. Set to
####          'noop' to disable.

# image_cache_manager_interval=40
#### (IntOpt) Number of periodic scheduler ticks to wait between runs of
####          the image cache manager.

# heal_instance_info_cache_interval=60
#### (IntOpt) Number of seconds between instance info_cache self healing
####          updates

# instance_usage_audit=false
#### (BoolOpt) Generate periodic compute.instance.exists notifications


######## defined in nova.compute.resource_tracker ########

# claim_timeout_seconds=600
#### (IntOpt) How long, in seconds, before a resource claim times out

# compute_stats_class=nova.compute.stats.Stats
#### (StrOpt) Class that will manage stats for the local compute host


######## defined in nova.console.manager ########

# console_driver=nova.console.xvp.XVPConsoleProxy
#### (StrOpt) Driver to use for the console proxy

# stub_compute=false
#### (BoolOpt) Stub calls to compute worker for tests

# console_public_hostname=nova
#### (StrOpt) Publicly visible name for this console host


######## defined in nova.console.vmrc ########

# console_vmrc_port=443
#### (IntOpt) port for VMware VMRC connections

# console_vmrc_error_retries=10
#### (IntOpt) number of retries for retrieving VMRC information


######## defined in nova.console.xvp ########

# console_xvp_conf_template=$pybasedir/nova/console/xvp.conf.template
#### (StrOpt) XVP conf template

# console_xvp_conf=/etc/xvp.conf
#### (StrOpt) generated XVP conf file

# console_xvp_pid=/var/run/xvp.pid
#### (StrOpt) XVP master process pid file

# console_xvp_log=/var/log/xvp.log
#### (StrOpt) XVP log file

# console_xvp_multiplex_port=5900
#### (IntOpt) port for XVP to multiplex VNC connections on


######## defined in nova.consoleauth ########

# consoleauth_topic=consoleauth
#### (StrOpt) the topic console auth proxy nodes listen on


######## defined in nova.consoleauth.manager ########

# console_token_ttl=600
#### (IntOpt) How many seconds before deleting tokens

# consoleauth_manager=nova.consoleauth.manager.ConsoleAuthManager
#### (StrOpt) Manager for console auth


######## defined in nova.db.api ########

# db_backend=sqlalchemy
#### (StrOpt) The backend to use for db

# enable_new_services=true
#### (BoolOpt) Services to be added to the available pool on create

# instance_name_template=instance-%08x
#### (StrOpt) Template string to be used to generate instance names

# volume_name_template=volume-%s
#### (StrOpt) Template string to be used to generate instance names

# snapshot_name_template=snapshot-%s
#### (StrOpt) Template string to be used to generate snapshot names


######## defined in nova.db.base ########

# db_driver=nova.db
#### (StrOpt) driver to use for database access


######## defined in nova.image.s3 ########

# image_decryption_dir=/tmp
#### (StrOpt) parent dir for tempdir used for image decryption

# s3_access_key=notchecked
#### (StrOpt) access key to use for s3 server for images

# s3_secret_key=notchecked
#### (StrOpt) secret key to use for s3 server for images

# s3_use_ssl=false
#### (BoolOpt) whether to use ssl when talking to s3

# s3_affix_tenant=false
#### (BoolOpt) whether to affix the tenant id to the access key when
####           downloading from s3


######## defined in nova.ipv6.api ########

# ipv6_backend=rfc2462
#### (StrOpt) Backend to use for IPv6 generation


######## defined in nova.network.ldapdns ########

# ldap_dns_url=ldap://ldap.example.com:389
#### (StrOpt) URL for ldap server which will store dns entries

# ldap_dns_user=uid=admin,ou=people,dc=example,dc=org
#### (StrOpt) user for ldap DNS

# ldap_dns_password=password
#### (StrOpt) password for ldap DNS

# ldap_dns_soa_hostmaster=hostmaster@example.org
#### (StrOpt) Hostmaster for ldap dns driver Statement of Authority

# ldap_dns_servers=dns.example.org
#### (MultiStrOpt) DNS Servers for ldap dns driver

# ldap_dns_base_dn=ou=hosts,dc=example,dc=org
#### (StrOpt) Base DN for DNS entries in ldap

# ldap_dns_soa_refresh=1800
#### (StrOpt) Refresh interval (in seconds) for ldap dns driver Statement
####          of Authority

# ldap_dns_soa_retry=3600
#### (StrOpt) Retry interval (in seconds) for ldap dns driver Statement of
####          Authority

# ldap_dns_soa_expiry=86400
#### (StrOpt) Expiry interval (in seconds) for ldap dns driver Statement
####          of Authority

# ldap_dns_soa_minimum=7200
#### (StrOpt) Minimum interval (in seconds) for ldap dns driver Statement
####          of Authority


######## defined in nova.network.linux_net ########

# dhcpbridge_flagfile=/etc/nova/nova-dhcpbridge.conf
#### (StrOpt) location of flagfile for dhcpbridge

# networks_path=$state_path/networks
#### (StrOpt) Location to keep network config files

# public_interface=eth0
#### (StrOpt) Interface for public IP addresses

# network_device_mtu=<None>
#### (StrOpt) MTU setting for vlan

# dhcpbridge=$bindir/nova-dhcpbridge
#### (StrOpt) location of nova-dhcpbridge

# routing_source_ip=$my_ip
#### (StrOpt) Public IP of network host

# dhcp_lease_time=120
#### (IntOpt) Lifetime of a DHCP lease in seconds

# dns_server=<None>
#### (StrOpt) if set, uses specific dns server for dnsmasq

# dmz_cidr=
#### (ListOpt) A list of dmz range that should be accepted

# dnsmasq_config_file=
#### (StrOpt) Override the default dnsmasq settings with this file

# linuxnet_interface_driver=nova.network.linux_net.LinuxBridgeInterfaceDriver
#### (StrOpt) Driver used to create ethernet devices.

# linuxnet_ovs_integration_bridge=br-int
#### (StrOpt) Name of Open vSwitch bridge used with linuxnet

# send_arp_for_ha=false
#### (BoolOpt) send gratuitous ARPs for HA setup

# use_single_default_gateway=false
#### (BoolOpt) Use single default gateway. Only first nic of vm will get
####           default gateway from dhcp server


######## defined in nova.network.manager ########

# flat_network_bridge=<None>
#### (StrOpt) Bridge for simple network instances

# flat_network_dns=8.8.4.4
#### (StrOpt) Dns for simple network

# flat_injected=false
#### (BoolOpt) Whether to attempt to inject network setup into guest

# flat_interface=<None>
#### (StrOpt) FlatDhcp will bridge into this interface if set

# vlan_start=100
#### (IntOpt) First VLAN for private networks

# vlan_interface=<None>
#### (StrOpt) vlans will bridge into this interface if set

# num_networks=1
#### (IntOpt) Number of networks to support

# vpn_ip=$my_ip
#### (StrOpt) Public IP for the cloudpipe VPN servers

# vpn_start=1000
#### (IntOpt) First Vpn port for private networks

# multi_host=false
#### (BoolOpt) Default value for multi_host in networks

# network_size=256
#### (IntOpt) Number of addresses in each private subnet

# floating_range=4.4.4.0/24
#### (StrOpt) Floating IP address block

# default_floating_pool=nova
#### (StrOpt) Default pool for floating ips

# fixed_range=10.0.0.0/8
#### (StrOpt) Fixed IP address block

# fixed_range_v6=fd00::/48
#### (StrOpt) Fixed IPv6 address block

# gateway=<None>
#### (StrOpt) Default IPv4 gateway

# gateway_v6=<None>
#### (StrOpt) Default IPv6 gateway

# cnt_vpn_clients=0
#### (IntOpt) Number of addresses reserved for vpn clients

# fixed_ip_disassociate_timeout=600
#### (IntOpt) Seconds after which a deallocated ip is disassociated

# create_unique_mac_address_attempts=5
#### (IntOpt) Number of attempts to create unique mac address

# auto_assign_floating_ip=false
#### (BoolOpt) Autoassigning floating ip to VM

# network_host=nova
#### (StrOpt) Network host to use for ip allocation in flat modes

# fake_call=false
#### (BoolOpt) If True, skip using the queue and make local calls

# force_dhcp_release=false
#### (BoolOpt) If True, send a dhcp release on instance termination

# dhcp_domain=novalocal
#### (StrOpt) domain to use for building the hostnames

# l3_lib=nova.network.l3.LinuxNetL3
#### (StrOpt) Indicates underlying L3 management library


######## defined in nova.network.quantumv2.api ########

# quantum_url=http://127.0.0.1:9696
#### (StrOpt) URL for connecting to quantum

# quantum_url_timeout=30
#### (IntOpt) timeout value for connecting to quantum in seconds

# quantum_admin_username=<None>
#### (StrOpt) username for connecting to quantum in admin context

# quantum_admin_password=<None>
#### (StrOpt) password for connecting to quantum in admin context

# quantum_admin_tenant_name=<None>
#### (StrOpt) tenant name for connecting to quantum in admin context

# quantum_admin_auth_url=http://localhost:5000/v2.0
#### (StrOpt) auth url for connecting to quantum in admin context

# quantum_auth_strategy=keystone
#### (StrOpt) auth strategy for connecting to quantum in admin context


######## defined in nova.objectstore.s3server ########

# buckets_path=$state_path/buckets
#### (StrOpt) path to s3 buckets

# s3_listen=0.0.0.0
#### (StrOpt) IP address for S3 API to listen

# s3_listen_port=3333
#### (IntOpt) port for s3 api to listen


######## defined in nova.openstack.common.log ########

# logdir=<None>
#### (StrOpt) Log output to a per-service log file in named directory

# logfile=<None>
#### (StrOpt) Log output to a named file

# use_stderr=true
#### (BoolOpt) Log output to standard error

# logfile_mode=0644
#### (StrOpt) Default file mode used when creating log files

# logging_context_format_string=%(asctime)s %(levelname)s %(name)s [%(request_id)s %(user_id)s %(project_id)s] %(instance)s%(message)s
#### (StrOpt) format string to use for log messages with context

# logging_default_format_string=%(asctime)s %(levelname)s %(name)s [-] %(instance)s%(message)s
#### (StrOpt) format string to use for log messages without context

# logging_debug_format_suffix=from (pid=%(process)d) %(funcName)s %(pathname)s:%(lineno)d
#### (StrOpt) data to append to log format when level is DEBUG

# logging_exception_prefix=%(asctime)s TRACE %(name)s %(instance)s
#### (StrOpt) prefix each line of exception output with this format

# default_log_levels=amqplib=WARN,sqlalchemy=WARN,boto=WARN,suds=INFO,keystone=INFO,eventlet.wsgi.server=WARN
#### (ListOpt) list of logger=LEVEL pairs

# publish_errors=false
#### (BoolOpt) publish error events

# instance_format="[instance: %(uuid)s] "
#### (StrOpt) If an instance is passed with the log message, format it
####          like this

# instance_uuid_format="[instance: %(uuid)s] "
#### (StrOpt) If an instance UUID is passed with the log message, format
####          it like this


######## defined in nova.openstack.common.notifier.api ########

#### (MultiStrOpt) Driver or drivers to handle sending notifications

# default_notification_level=INFO
#### (StrOpt) Default notification level for outgoing notifications

# default_publisher_id=$host
#### (StrOpt) Default publisher_id for outgoing notifications


######## defined in nova.openstack.common.notifier.rabbit_notifier ########

# notification_topics=notifications
#### (ListOpt) AMQP topic used for openstack notifications


######## defined in nova.openstack.common.rpc ########

# rpc_backend=nova.openstack.common.rpc.impl_kombu
#### (StrOpt) The messaging module to use, defaults to kombu.

# rpc_thread_pool_size=64
#### (IntOpt) Size of RPC thread pool

# rpc_conn_pool_size=30
#### (IntOpt) Size of RPC connection pool

# rpc_response_timeout=60
#### (IntOpt) Seconds to wait for a response from call or multicall

# rpc_cast_timeout=30
#### (IntOpt) Seconds to wait before a cast expires (TTL). Only supported
####          by impl_zmq.

# allowed_rpc_exception_modules=nova.openstack.common.exception,nova.exception
#### (ListOpt) Modules of exceptions that are permitted to be recreatedupon
####           receiving exception data from an rpc call.

# control_exchange=nova
#### (StrOpt) AMQP exchange to connect to if using RabbitMQ or Qpid

# fake_rabbit=false
#### (BoolOpt) If passed, use a fake RabbitMQ provider


######## defined in nova.openstack.common.rpc.impl_kombu ########

# kombu_ssl_version=
#### (StrOpt) SSL version to use (valid only if SSL enabled)

# kombu_ssl_keyfile=
#### (StrOpt) SSL key file (valid only if SSL enabled)

# kombu_ssl_certfile=
#### (StrOpt) SSL cert file (valid only if SSL enabled)

# kombu_ssl_ca_certs=
#### (StrOpt) SSL certification authority file (valid only if SSL enabled)

# rabbit_host=localhost
#### (StrOpt) the RabbitMQ host

# rabbit_port=5672
#### (IntOpt) the RabbitMQ port

# rabbit_use_ssl=false
#### (BoolOpt) connect over SSL for RabbitMQ

# rabbit_userid=guest
#### (StrOpt) the RabbitMQ userid

# rabbit_password=guest
#### (StrOpt) the RabbitMQ password

# rabbit_virtual_host=/
#### (StrOpt) the RabbitMQ virtual host

# rabbit_retry_interval=1
#### (IntOpt) how frequently to retry connecting with RabbitMQ

# rabbit_retry_backoff=2
#### (IntOpt) how long to backoff for between retries when connecting to
####          RabbitMQ

# rabbit_max_retries=0
#### (IntOpt) maximum retries with trying to connect to RabbitMQ (the
####          default of 0 implies an infinite retry count)

# rabbit_durable_queues=false
#### (BoolOpt) use durable queues in RabbitMQ


######## defined in nova.openstack.common.rpc.impl_qpid ########

# qpid_hostname=localhost
#### (StrOpt) Qpid broker hostname

# qpid_port=5672
#### (StrOpt) Qpid broker port

# qpid_username=
#### (StrOpt) Username for qpid connection

# qpid_password=
#### (StrOpt) Password for qpid connection

# qpid_sasl_mechanisms=
#### (StrOpt) Space separated list of SASL mechanisms to use for auth

# qpid_reconnect=true
#### (BoolOpt) Automatically reconnect

# qpid_reconnect_timeout=0
#### (IntOpt) Reconnection timeout in seconds

# qpid_reconnect_limit=0
#### (IntOpt) Max reconnections before giving up

# qpid_reconnect_interval_min=0
#### (IntOpt) Minimum seconds between reconnection attempts

# qpid_reconnect_interval_max=0
#### (IntOpt) Maximum seconds between reconnection attempts

# qpid_reconnect_interval=0
#### (IntOpt) Equivalent to setting max and min to the same value

# qpid_heartbeat=5
#### (IntOpt) Seconds between connection keepalive heartbeats

# qpid_protocol=tcp
#### (StrOpt) Transport to use, either 'tcp' or 'ssl'

# qpid_tcp_nodelay=true
#### (BoolOpt) Disable Nagle algorithm


######## defined in nova.openstack.common.rpc.impl_zmq ########

# rpc_zmq_bind_address=*
#### (StrOpt) ZeroMQ bind address. Should be a wildcard (*), an ethernet
####          interface, or IP. The "host" option should point or resolve
####          to this address.

# rpc_zmq_matchmaker=nova.openstack.common.rpc.matchmaker.MatchMakerLocalhost
#### (StrOpt) MatchMaker driver

# rpc_zmq_port=9501
#### (IntOpt) ZeroMQ receiver listening port

# rpc_zmq_contexts=1
#### (IntOpt) Number of ZeroMQ contexts, defaults to 1

# rpc_zmq_ipc_dir=/var/run/openstack
#### (StrOpt) Directory for holding IPC sockets

# rpc_zmq_host=nova
#### (StrOpt) Name of this node. Must be a valid hostname, FQDN, or IP
####          address. Must match "host" option, if running Nova.


######## defined in nova.openstack.common.rpc.matchmaker ########

# matchmaker_ringfile=/etc/nova/matchmaker_ring.json
#### (StrOpt) Matchmaker ring file (JSON)


######## defined in nova.scheduler.driver ########

# scheduler_host_manager=nova.scheduler.host_manager.HostManager
#### (StrOpt) The scheduler host manager class to use

# scheduler_max_attempts=3
#### (IntOpt) Maximum number of attempts to schedule an instance


######## defined in nova.scheduler.filters.core_filter ########

# cpu_allocation_ratio=16.0
#### (FloatOpt) Virtual CPU to Physical CPU allocation ratio


######## defined in nova.scheduler.filters.ram_filter ########

# ram_allocation_ratio=1.5
#### (FloatOpt) virtual ram to physical ram allocation ratio


######## defined in nova.scheduler.filters.trusted_filter ########

# server=<None>
#### (StrOpt) attestation server http

# server_ca_file=<None>
#### (StrOpt) attestation server Cert file for Identity verification

# port=8443
#### (StrOpt) attestation server port

# api_url=/OpenAttestationWebServices/V1.0
#### (StrOpt) attestation web API URL

# auth_blob=<None>
#### (StrOpt) attestation authorization blob - must change


######## defined in nova.scheduler.host_manager ########

# reserved_host_disk_mb=0
#### (IntOpt) Amount of disk in MB to reserve for host/dom0

# reserved_host_memory_mb=512
#### (IntOpt) Amount of memory in MB to reserve for host/dom0

# scheduler_available_filters=nova.scheduler.filters.standard_filters
#### (MultiStrOpt) Filter classes available to the scheduler which may be
####               specified more than once.  An entry of
####               "nova.scheduler.filters.standard_filters" maps to all
####               filters included with nova.

# scheduler_default_filters=RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter
#### (ListOpt) Which filter class names to use for filtering hosts when not
####           specified in the request.


######## defined in nova.scheduler.least_cost ########

# least_cost_functions=nova.scheduler.least_cost.compute_fill_first_cost_fn
#### (ListOpt) Which cost functions the LeastCostScheduler should use

# noop_cost_fn_weight=1.0
#### (FloatOpt) How much weight to give the noop cost function

# compute_fill_first_cost_fn_weight=-1.0
#### (FloatOpt) How much weight to give the fill-first cost function. A
####            negative value will reverse behavior: e.g. spread-first


######## defined in nova.scheduler.manager ########

# scheduler_driver=nova.scheduler.multi.MultiScheduler
#### (StrOpt) Default driver to use for the scheduler


######## defined in nova.scheduler.multi ########

# compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler
#### (StrOpt) Driver to use for scheduling compute calls

# volume_scheduler_driver=nova.scheduler.chance.ChanceScheduler
#### (StrOpt) Driver to use for scheduling volume calls

# default_scheduler_driver=nova.scheduler.chance.ChanceScheduler
#### (StrOpt) Default driver to use for scheduling calls


######## defined in nova.scheduler.scheduler_options ########

# scheduler_json_config_location=
#### (StrOpt) Absolute path to scheduler configuration JSON file.


######## defined in nova.scheduler.simple ########

# max_gigabytes=10000
#### (IntOpt) maximum number of volume gigabytes to allow per host


######## defined in nova.virt.baremetal.driver ########

# baremetal_type=baremetal
#### (StrOpt) baremetal domain type


######## defined in nova.virt.baremetal.nodes ########

# baremetal_driver=tilera
#### (StrOpt) Bare-metal driver runs on


######## defined in nova.virt.baremetal.tilera ########

# tile_monitor=/usr/local/TileraMDE/bin/tile-monitor
#### (StrOpt) Tilera command line program for Bare-metal driver


######## defined in nova.virt.configdrive ########

# config_drive_format=iso9660
#### (StrOpt) Config drive format. One of iso9660 (default) or vfat

# config_drive_tempdir=<None>
#### (StrOpt) Where to put temporary files associated with config drive
####          creation


######## defined in nova.virt.disk.api ########

# injected_network_template=$pybasedir/nova/virt/interfaces.template
#### (StrOpt) Template file for injected network

# img_handlers=loop,nbd,guestfs
#### (ListOpt) Order of methods used to mount disk images

# virt_mkfs=default=mkfs.ext3 -L %(fs_label)s -F %(target)s
# virt_mkfs=linux=mkfs.ext3 -L %(fs_label)s -F %(target)s
# virt_mkfs=windows=mkfs.ntfs --force --fast --label %(fs_label)s %(target)s
#### (MultiStrOpt) mkfs commands for ephemeral device. The format is
####               <os_type>=<mkfs command>


######## defined in nova.virt.disk.nbd ########

# timeout_nbd=10
#### (IntOpt) time to wait for a NBD device coming up

# max_nbd_devices=16
#### (IntOpt) maximum number of possible nbd devices


######## defined in nova.virt.firewall ########

# firewall_driver=<None>
#### (StrOpt) Firewall driver (defaults to hypervisor specific iptables
####          driver)

# allow_same_net_traffic=true
#### (BoolOpt) Whether to allow network traffic from same network


######## defined in nova.virt.hyperv.vmops ########

# vswitch_name=<None>
#### (StrOpt) Default vSwitch Name, if none provided first external is
####          used

# limit_cpu_features=false
#### (BoolOpt) required for live migration among hosts with different CPU
####           features


######## defined in nova.virt.hyperv.volumeops ########

# hyperv_attaching_volume_retry_count=10
#### (IntOpt) The number of times we retry on attaching volume

# hyperv_wait_between_attach_retry=5
#### (IntOpt) The seconds to wait between an volume attachment attempt


######## defined in nova.virt.images ########

# force_raw_images=true
#### (BoolOpt) Force backing images to raw format


######## defined in nova.virt.libvirt.driver ########

# rescue_image_id=<None>
#### (StrOpt) Rescue ami image

# rescue_kernel_id=<None>
#### (StrOpt) Rescue aki image

# rescue_ramdisk_id=<None>
#### (StrOpt) Rescue ari image

# libvirt_type=kvm
#### (StrOpt) Libvirt domain type (valid options are: kvm, lxc, qemu, uml,
####          xen)

# libvirt_uri=
#### (StrOpt) Override the default libvirt URI (which is dependent on
####          libvirt_type)

# libvirt_inject_password=false
#### (BoolOpt) Inject the admin password at boot time, without an agent.

# libvirt_inject_key=true
#### (BoolOpt) Inject the ssh public key at boot time

# libvirt_inject_partition=1
#### (IntOpt) The partition to inject to : -1 => inspect (libguestfs
####          only), 0 => not partitioned, >0 => partition number

# use_usb_tablet=true
#### (BoolOpt) Sync virtual and real mouse cursors in Windows VMs

# live_migration_uri=qemu+tcp://%s/system
#### (StrOpt) Migration target URI (any included "%s" is replaced with the
####          migration target hostname)

# live_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER
#### (StrOpt) Migration flags to be set for live migration

# block_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_NON_SHARED_INC
#### (StrOpt) Migration flags to be set for block migration

# live_migration_bandwidth=0
#### (IntOpt) Maximum bandwidth to be used during migration, in Mbps

# snapshot_image_format=<None>
#### (StrOpt) Snapshot image format (valid options are : raw, qcow2, vmdk,
####          vdi). Defaults to same as source image

# libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtBridgeDriver
#### (StrOpt) The libvirt VIF driver to configure the VIFs.

# libvirt_volume_drivers=iscsi=nova.virt.libvirt.volume.LibvirtISCSIVolumeDriver,local=nova.virt.libvirt.volume.LibvirtVolumeDriver,fake=nova.virt.libvirt.volume.LibvirtFakeVolumeDriver,rbd=nova.virt.libvirt.volume.LibvirtNetVolumeDriver,sheepdog=nova.virt.libvirt.volume.LibvirtNetVolumeDriver
#### (ListOpt) Libvirt handlers for remote volumes.

# libvirt_disk_prefix=<None>
#### (StrOpt) Override the default disk prefix for the devices attached to
####          a server, which is dependent on libvirt_type. (valid options
####          are: sd, xvd, uvd, vd)

# libvirt_wait_soft_reboot_seconds=120
#### (IntOpt) Number of seconds to wait for instance to shut down after
####          soft reboot request is made. We fall back to hard reboot if
####          instance does not shutdown within this window.

# libvirt_nonblocking=true
#### (BoolOpt) Use a separated OS thread pool to realize non-blocking
####           libvirt calls

# force_config_drive=<None>
#### (StrOpt) Set to force injection to take place on a config drive (if
####          set, valid options are: always)

# libvirt_cpu_mode=<None>
#### (StrOpt) Set to "host-model" to clone the host CPU feature flags; to
####          "host-passthrough" to use the host CPU model exactly; to
####          "custom" to use a named CPU model; to "none" to not set any
####          CPU model. If libvirt_type="kvm|qemu", it will default to
####          "host-model", otherwise it will default to "none"

# libvirt_cpu_model=<None>
#### (StrOpt) Set to a named libvirt CPU model (see names listed in
####          /usr/share/libvirt/cpu_map.xml). Only has effect if
####          libvirt_cpu_mode="custom" and libvirt_type="kvm|qemu"

# libvirt_snapshots_directory=$instances_path/snapshots
#### (StrOpt) Location where libvirt driver will store snapshots before
####          uploading them to image service


######## defined in nova.virt.libvirt.imagebackend ########

# libvirt_images_type=default
#### (StrOpt) VM Images format. Acceptable values are: raw, qcow2, lvm,
####          default. If default is specified, then use_cow_images flag
####          is used instead of this one.

# libvirt_images_volume_group=<None>
#### (StrOpt) LVM Volume Group that is used for VM images, when you
####          specify libvirt_images_type=lvm.

# libvirt_sparse_logical_volumes=false
#### (BoolOpt) Create sparse logical volumes (with virtualsize) if this
####           flag is set to True.


######## defined in nova.virt.libvirt.imagecache ########

# remove_unused_base_images=true
#### (BoolOpt) Should unused base images be removed?

# remove_unused_resized_minimum_age_seconds=3600
#### (IntOpt) Unused resized base images younger than this will not be
####          removed

# remove_unused_original_minimum_age_seconds=86400
#### (IntOpt) Unused unresized base images younger than this will not be
####          removed

# checksum_base_images=false
#### (BoolOpt) Write a checksum for files in _base to disk


######## defined in nova.virt.libvirt.utils ########

# image_info_filename_pattern=$instances_path/$base_dir_name/%(image)s.info
#### (StrOpt) Allows image information files to be stored in non-standard
####          locations


######## defined in nova.virt.libvirt.vif ########

# libvirt_ovs_bridge=br-int
#### (StrOpt) Name of Integration Bridge used by Open vSwitch

# libvirt_use_virtio_for_bridges=false
#### (BoolOpt) Use virtio for bridge interfaces


######## defined in nova.virt.libvirt.volume_nfs ########

# nfs_mount_point_base=$state_path/mnt
#### (StrOpt) Base dir where nfs expected to be mounted on compute


######## defined in nova.virt.powervm.driver ########

# powervm_mgr_type=ivm
#### (StrOpt) PowerVM manager type (ivm, hmc)

# powervm_mgr=<None>
#### (StrOpt) PowerVM manager host or ip

# powervm_mgr_user=<None>
#### (StrOpt) PowerVM manager user name

# powervm_mgr_passwd=<None>
#### (StrOpt) PowerVM manager user password

# powervm_img_remote_path=<None>
#### (StrOpt) PowerVM image remote path

# powervm_img_local_path=<None>
#### (StrOpt) Local directory to download glance images to


######## defined in nova.virt.vmwareapi.driver ########

# vmwareapi_host_ip=<None>
#### (StrOpt) URL for connection to VMWare ESX host.Required if
####          compute_driver is vmwareapi.VMWareESXDriver.

# vmwareapi_host_username=<None>
#### (StrOpt) Username for connection to VMWare ESX host. Used only if
####          compute_driver is vmwareapi.VMWareESXDriver.

# vmwareapi_host_password=<None>
#### (StrOpt) Password for connection to VMWare ESX host. Used only if
####          compute_driver is vmwareapi.VMWareESXDriver.

# vmwareapi_task_poll_interval=5.0
#### (FloatOpt) The interval used for polling of remote tasks. Used only if
####            compute_driver is vmwareapi.VMWareESXDriver.

# vmwareapi_api_retry_count=10
#### (IntOpt) The number of times we retry on failures, e.g., socket
####          error, etc. Used only if compute_driver is
####          vmwareapi.VMWareESXDriver.

# vmwareapi_vlan_interface=vmnic0
#### (StrOpt) Physical ethernet adapter name for vlan networking


######## defined in nova.virt.vmwareapi.vim ########

# vmwareapi_wsdl_loc=<None>
#### (StrOpt) VIM Service WSDL Location e.g
####          http://<server>/vimService.wsdl. Due to a bug in vSphere ESX
####          4.1 default wsdl. Refer readme-vmware to setup


######## defined in nova.virt.vmwareapi.vmops ########

# vmware_vif_driver=nova.virt.vmwareapi.vif.VMWareVlanBridgeDriver
#### (StrOpt) The VMWare VIF driver to configure the VIFs.


######## defined in nova.virt.xenapi.agent ########

# agent_version_timeout=300
#### (IntOpt) number of seconds to wait for agent to be fully operational


######## defined in nova.virt.xenapi.driver ########

# xenapi_connection_url=<None>
#### (StrOpt) URL for connection to XenServer/Xen Cloud Platform. Required
####          if compute_driver=xenapi.XenAPIDriver

# xenapi_connection_username=root
#### (StrOpt) Username for connection to XenServer/Xen Cloud Platform.
####          Used only if compute_driver=xenapi.XenAPIDriver

# xenapi_connection_password=<None>
#### (StrOpt) Password for connection to XenServer/Xen Cloud Platform.
####          Used only if compute_driver=xenapi.XenAPIDriver

# xenapi_connection_concurrent=5
#### (IntOpt) Maximum number of concurrent XenAPI connections. Used only
####          if compute_driver=xenapi.XenAPIDriver

# xenapi_vhd_coalesce_poll_interval=5.0
#### (FloatOpt) The interval used for polling of coalescing vhds. Used only
####            if compute_driver=xenapi.XenAPIDriver

# xenapi_check_host=true
#### (BoolOpt) Ensure compute service is running on host XenAPI connects
####           to.

# xenapi_vhd_coalesce_max_attempts=5
#### (IntOpt) Max number of times to poll for VHD to coalesce. Used only
####          if compute_driver=xenapi.XenAPIDriver

# xenapi_agent_path=usr/sbin/xe-update-networking
#### (StrOpt) Specifies the path in which the xenapi guest agent should be
####          located. If the agent is present, network configuration is
####          not injected into the image. Used if
####          compute_driver=xenapi.XenAPIDriver and  flat_injected=True

# xenapi_sr_base_path=/var/run/sr-mount
#### (StrOpt) Base path to the storage repository

# target_host=<None>
#### (StrOpt) iSCSI Target Host

# target_port=3260
#### (StrOpt) iSCSI Target Port, 3260 Default

# iqn_prefix=iqn.2010-10.org.openstack
#### (StrOpt) IQN Prefix

# xenapi_remap_vbd_dev=false
#### (BoolOpt) Used to enable the remapping of VBD dev (Works around an
####           issue in Ubuntu Maverick)

# xenapi_remap_vbd_dev_prefix=sd
#### (StrOpt) Specify prefix to remap VBD dev to (ex. /dev/xvdb ->
####          /dev/sdb)

# xenapi_login_timeout=10
#### (IntOpt) Timeout in seconds for XenAPI login.


######## defined in nova.virt.xenapi.pool ########

# use_join_force=true
#### (BoolOpt) To use for hosts with different CPUs


######## defined in nova.virt.xenapi.vif ########

# xenapi_ovs_integration_bridge=xapi1
#### (StrOpt) Name of Integration Bridge used by Open vSwitch


######## defined in nova.virt.xenapi.vm_utils ########

# default_os_type=linux
#### (StrOpt) Default OS type

# block_device_creation_timeout=10
#### (IntOpt) Time to wait for a block device to be created

# max_kernel_ramdisk_size=16777216
#### (IntOpt) Maximum size in bytes of kernel or ramdisk images

# sr_matching_filter=other-config:i18n-key=local-storage
#### (StrOpt) Filter for finding the SR to be used to install guest
####          instances on. The default value is the Local Storage in
####          default XenServer/XCP installations. To select an SR with a
####          different matching criteria, you could set it to other-
####          config:my_favorite_sr=true. On the other hand, to fall back
####          on the Default SR, as displayed by XenCenter, set this flag
####          to: default-sr:true

# xenapi_sparse_copy=true
#### (BoolOpt) Whether to use sparse_copy for copying data on a resize down
####           (False will use standard dd). This speeds up resizes down
####           considerably since large runs of zeros won't have to be
####           rsynced

# xenapi_num_vbd_unplug_retries=10
#### (IntOpt) Maximum number of retries to unplug VBD


######## defined in nova.virt.xenapi.vmops ########

# xenapi_running_timeout=60
#### (IntOpt) number of seconds to wait for instance to go to running
####          state

# xenapi_vif_driver=nova.virt.xenapi.vif.XenAPIBridgeDriver
#### (StrOpt) The XenAPI VIF driver using XenServer Network APIs.

# xenapi_generate_swap=false
#### (BoolOpt) Whether to generate swap (False means fetching it from OVA)


######## defined in nova.vnc ########

# novncproxy_base_url=http://127.0.0.1:6080/vnc_auto.html
#### (StrOpt) location of vnc console proxy, in the form
####          "http://127.0.0.1:6080/vnc_auto.html"

# xvpvncproxy_base_url=http://127.0.0.1:6081/console
#### (StrOpt) location of nova xvp vnc console proxy, in the form
####          "http://127.0.0.1:6081/console"

# vncserver_listen=127.0.0.1
#### (StrOpt) Ip address on which instance vncserversshould listen

# vncserver_proxyclient_address=127.0.0.1
#### (StrOpt) the address to which proxy clients (like nova-xvpvncproxy)
####          should connect

# vnc_enabled=true
#### (BoolOpt) enable vnc related features

# vnc_keymap=en-us
#### (StrOpt) keymap for vnc


######## defined in nova.vnc.xvp_proxy ########

# xvpvncproxy_port=6081
#### (IntOpt) Port that the XCP VNC proxy should bind to

# xvpvncproxy_host=0.0.0.0
#### (StrOpt) Address that the XCP VNC proxy should bind to


######## defined in nova.volume.api ########

# snapshot_same_host=true
#### (BoolOpt) Create volume from snapshot at the host where snapshot
####           resides


######## defined in nova.volume.cinder ########

# cinder_catalog_info=volume:cinder:publicURL
#### (StrOpt) Info to match when looking for cinder in the service catalog.
####          Format is : separated values of the form:
####          <service_type>:<service_name>:<endpoint_type>

# cinder_endpoint_template=None
#### (StrOpt) Override service catalog lookup with template for cinder 
####          endpoint e.g. http://localhost:8776/v1/%(project_id)s


######## defined in nova.volume.driver ########

# volume_group=nova-volumes
#### (StrOpt) Name for the VG that will contain exported volumes

# num_shell_tries=3
#### (IntOpt) number of times to attempt to run flakey shell commands

# num_iscsi_scan_tries=3
#### (IntOpt) number of times to rescan iSCSI target to find volume

# iscsi_num_targets=100
#### (IntOpt) Number of iscsi target ids per host

# iscsi_target_prefix=iqn.2010-10.org.openstack:
#### (StrOpt) prefix for iscsi volumes

# iscsi_ip_address=$my_ip
#### (StrOpt) use this ip for iscsi

# iscsi_port=3260
#### (IntOpt) The port that the iSCSI daemon is listening on

# rbd_pool=rbd
#### (StrOpt) the RADOS pool in which rbd volumes are stored

# rbd_user=<None>
#### (StrOpt) the RADOS client name for accessing rbd volumes

# rbd_secret_uuid=<None>
#### (StrOpt) the libvirt uuid of the secret for the rbd_uservolumes


######## defined in nova.volume.iscsi ########

# iscsi_helper=tgtadm
#### (StrOpt) iscsi target user-land tool to use

# volumes_dir=$state_path/volumes
#### (StrOpt) Volume configuration file storage directory


######## defined in nova.volume.manager ########

# storage_availability_zone=nova
#### (StrOpt) availability zone of this service

# volume_driver=nova.volume.driver.ISCSIDriver
#### (StrOpt) Driver to use for volume creation

# use_local_volumes=true
#### (BoolOpt) if True, will not discover local volumes

# volume_force_update_capabilities=false
#### (BoolOpt) if True will force update capabilities on each check


######## defined in nova.volume.netapp ########

# netapp_wsdl_url=<None>
#### (StrOpt) URL of the WSDL file for the DFM server

# netapp_login=<None>
#### (StrOpt) User name for the DFM server

# netapp_password=<None>
#### (StrOpt) Password for the DFM server

# netapp_server_hostname=<None>
#### (StrOpt) Hostname for the DFM server

# netapp_server_port=8088
#### (IntOpt) Port number for the DFM server

# netapp_storage_service=<None>
#### (StrOpt) Storage service to use for provisioning (when
####          volume_type=None)

# netapp_storage_service_prefix=<None>
#### (StrOpt) Prefix of storage service name to use for provisioning
####          (volume_type name will be appended)

# netapp_vfiler=<None>
#### (StrOpt) Vfiler to use for provisioning


######## defined in nova.volume.nexenta.volume ########

# nexenta_host=
#### (StrOpt) IP address of Nexenta SA

# nexenta_rest_port=2000
#### (IntOpt) HTTP port to connect to Nexenta REST API server

# nexenta_rest_protocol=auto
#### (StrOpt) Use http or https for REST connection (default auto)

# nexenta_user=admin
#### (StrOpt) User name to connect to Nexenta SA

# nexenta_password=nexenta
#### (StrOpt) Password to connect to Nexenta SA

# nexenta_iscsi_target_portal_port=3260
#### (IntOpt) Nexenta target portal port

# nexenta_volume=nova
#### (StrOpt) pool on SA that will hold all volumes

# nexenta_target_prefix=iqn.1986-03.com.sun:02:nova-
#### (StrOpt) IQN prefix for iSCSI targets

# nexenta_target_group_prefix=nova/
#### (StrOpt) prefix for iSCSI target groups on SA

# nexenta_blocksize=
#### (StrOpt) block size for volumes (blank=default,8KB)

# nexenta_sparse=false
#### (BoolOpt) flag to create sparse volumes


######## defined in nova.volume.san ########

# san_thin_provision=true
#### (BoolOpt) Use thin provisioning for SAN volumes?

# san_ip=
#### (StrOpt) IP address of SAN controller

# san_login=admin
#### (StrOpt) Username for SAN controller

# san_password=
#### (StrOpt) Password for SAN controller

# san_private_key=
#### (StrOpt) Filename of private key to use for SSH authentication

# san_clustername=
#### (StrOpt) Cluster name to use for creating volumes

# san_ssh_port=22
#### (IntOpt) SSH port to use with SAN

# san_is_local=false
#### (BoolOpt) Execute commands locally instead of over SSH; use if the
####           volume service is running on the SAN device

# san_zfs_volume_base=rpool/
#### (StrOpt) The ZFS path under which to create zvols for volumes.


######## defined in nova.volume.storwize_svc ########

# storwize_svc_volpool_name=volpool
#### (StrOpt) Storage system storage pool for volumes

# storwize_svc_vol_vtype=striped
#### (StrOpt) Storage system volume type for volumes

# storwize_svc_vol_rsize=2%
#### (StrOpt) Storage system space-efficiency parameter for volumes

# storwize_svc_vol_warning=0
#### (StrOpt) Storage system threshold for volume capacity warnings

# storwize_svc_vol_autoexpand=true
#### (BoolOpt) Storage system autoexpand parameter for volumes (True/False)

# storwize_svc_vol_grainsize=256
#### (StrOpt) Storage system grain size parameter for volumes
####          (32/64/128/256)

# storwize_svc_vol_compression=false
#### (BoolOpt) Storage system compression option for volumes

# storwize_svc_flashcopy_timeout=120
#### (StrOpt) Maximum number of seconds to wait for FlashCopy to be
####          prepared. Maximum value is 600 seconds (10 minutes).


# added by eliot
# janus_host=
#### (StrOpt) SDI manager host name

# janus_port=
#### (StrOpt) SDI manager host port

# Total option count: 505
